<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- UserMapper.xml :: SQL 를 갖는 MetaData - MyBatis Framework 은 XML MetaData 
	를 사용 SQL구문을 관리 (SQL은 xml 을 통해 적절히 캡슐화 되어 애플리케이선 외부로 분리함) - SQL문의 입력(?) / 
	출력(?)을 매핑한다. <== 아래의 select element 참조 -->

<mapper namespace="MessageMapper">

	<resultMap id="MessageSelectMap" type="com.model2.mvc.service.domain.Message">
		<result property="messageNo" column="message_no" jdbcType="INTEGER" />
		<result property="user.userNo" column="user_no" jdbcType="INTEGER" />
		<result property="contents" column="contents" jdbcType="VARCHAR" />
		<result property="regDate" column="reg_date" jdbcType="DATE" />
		<result property="tranCode" column="tran_code" jdbcType="VARCHAR" />
		
		<association property="user" javaType="com.model2.mvc.service.domain.User">
			<result property="userId" column="user_id" jdbcType="VARCHAR" />
			<result property="userNo" column="user_no" jdbcType="INTEGER" />
			<result property="userName" column="user_name" jdbcType="VARCHAR" />
			<result property="password" column="password" jdbcType="VARCHAR" />
			<result property="phone" column="phone" jdbcType="VARCHAR" />
			<result property="sex" column="sex" jdbcType="VARCHAR" />
			<result property="regDate" column="reg_date" jdbcType="DATE" />
			<result property="role" column="role" jdbcType="VARCHAR" />
			<result property="addr" column="addr" jdbcType="VARCHAR" />
		</association>


	</resultMap>


	<insert id="addMessage" parameterType="com.model2.mvc.service.domain.Message">
		INSERT
		INTO
		MESSAGE(message_no, user_no, contents, reg_date)
		VALUES(
		message_no.nextval,
		#{user.userNo},
		#{contents},
		SYSDATE
		)
	</insert>
	
	<!-- 총 게시물  -->
	<select id="getTotalCount" 
		resultType="int">
		SELECT COUNT(*)
		FROM( SELECT message_no 
		FROM Message
				) countTable
	</select>
		
	<!-- 리스트 뿌리기 -->
<!-- 	<select id="getMessageList" parameterType="hashMap"
		resultMap="MessageSelectMap">
		SELECT a.auction_no, a.model, a.title, u.user_name,  bid.temp, a.reg_date, a.success_car, a.cnt, a.bid_cnt
		from ( SELECT inner_table.* , ROWNUM AS row_seq 
			FROM	( SELECT * 
						FROM ( SELECT * FROM message
							<if test="search.tabs != 0">
								<where>
									<if test="search.tabs == 1 and search.tabs !='' ">
										success_car = 0
									</if>
									<if test="search.tabs == 2 and search.tabs !='' ">
										NOT success_car = 0
									</if>
								</where>
							</if>  ) message
										<if test="search.searchCondition != -1 and search.searchKeyword !='' ">
											<where>
												<if test="search.searchCondition == 0 and search.searchKeyword !='' ">
													auction_no = #{search.searchKeyword}
												</if>
												<if test="search.searchCondition == 1 and search.searchKeyword !='' ">
													model like #{search.searchKeyword}
												</if>
											</where>
										</if>  ORDER BY 
												 <choose>
												    <when test=" search.orderby == 1 and search.orderby !='' ">
														bid_cnt DESC
												    </when>
												    <when test=" search.orderby == 2 and search.orderby !='' ">
														cnt DESC
												    </when>
												    <otherwise>
														auction_no DESC
												    </otherwise>
												  </choose> ) inner_table
														WHERE ROWNUM &lt;= #{search.endRowNum} ) a, users u,(SELECT al.auction_no AS auction_no, c.car_no AS temp 
																												FROM auctionlist al, car c
																												WHERE al.car_no = c.car_no 
																												AND c.user_no =  #{userNo}) bid	
																					
				where u.user_no = a.user_no(+)
				AND bid.auction_no(+) = a.auction_no
				AND row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum} 
				ORDER BY a.auction_no DESC
	</select>
 -->
	<select id="getMessage" parameterType="int"
		resultMap="MessageSelectMap">
		SELECT *
		FROM
		message
		WHERE
		message_no = #{messageNo}
	</select>

	<update id="updateTranCode" parameterType="com.model2.mvc.service.domain.Message">
		UPDATE message
		<set>
			tranCode = #{tranCode:VARCHAR}
		</set>
		WHERE tran_code = #{tranCode}
	</update>

</mapper>