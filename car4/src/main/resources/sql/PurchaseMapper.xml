<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- UserMapper.xml :: SQL 를 갖는 MetaData - MyBatis Framework 은 XML MetaData 
	를 사용 SQL구문을 관리 (SQL은 xml 을 통해 적절히 캡슐화 되어 애플리케이선 외부로 분리함) - SQL문의 입력(?) / 
	출력(?)을 매핑한다. <== 아래의 select element 참조 -->

<mapper namespace="PurchaseMapper">

	<resultMap id="purchaseSelectMap" type="com.model2.mvc.service.domain.Purchase">
		<result property="tranNo" column="tran_no" jdbcType="NUMERIC" />
		<result property="paymentOption" column="payment_option"
			jdbcType="CHAR" />
		<result property="receiverName" column="receiver_name"
			jdbcType="VARCHAR" />
		<result property="receiverPhone" column="receiver_phone"
			jdbcType="VARCHAR" />
		<result property="divyAddr" column="demailaddr" jdbcType="VARCHAR" />
		<result property="divyRequest" column="dlvy_request" jdbcType="VARCHAR" />
		<result property="tranCode" column="tran_status_code" jdbcType="VARCHAR" />
		<result property="orderDate" column="order_data" jdbcType="DATE" />
		<result property="divyDate" column="dlvy_date" jdbcType="DATE" />

		<association property="purchaseProd"
			javaType="com.model2.mvc.service.domain.Product">
			<id property="prodNo" column="prod_id" jdbcType="NUMERIC" />
			<result property="prodName" column="prod_name" jdbcType="VARCHAR" />
			<result property="prodDetail" column="prod_detail" jdbcType="VARCHAR" />
			<result property="manuDate" column="manufacture_day" jdbcType="VARCHAR" />
			<result property="price" column="price" jdbcType="NUMERIC" />
			<result property="fileName" column="image_file" jdbcType="VARCHAR" />
			<result property="regDate" column="productDate" jdbcType="DATE" />
		</association>

		<association property="buyer" javaType="com.model2.mvc.service.domain.User">
			<id property="userId" column="buyer_id" jdbcType="VARCHAR" />
			<result property="userName" column="user_name" jdbcType="VARCHAR" />
			<result property="password" column="password" jdbcType="VARCHAR" />
			<result property="role" column="role" jdbcType="VARCHAR" />
			<result property="ssn" column="ssn" jdbcType="VARCHAR" />
			<result property="phone" column="cell_phone" jdbcType="VARCHAR" />
			<result property="addr" column="addr" jdbcType="VARCHAR" />
			<result property="email" column="email" jdbcType="VARCHAR" />
			<result property="regDate" column="reg_date" jdbcType="DATE" />
		</association>
	</resultMap>

	<sql id="getJoinQuery">
		SELECT
		t.tran_no, t.prod_no, t.buyer_id, t.payment_option,
		t.receiver_name,
		t.receiver_phone, t.demailaddr, t.dlvy_request,
		t.tran_status_code,
		t.order_data, TO_CHAR(t.dlvy_date,'YYYYMMDD') dlvy_date,

		u.user_id, u.user_name,
		u.password, u.role, u.ssn, u.cell_phone, u.addr,
		u.email, u.reg_date,

		p.prod_no AS prod_id, p.prod_name, p.prod_detail, p.manufacture_day,
		p.price,
		p.image_file, p.reg_date AS productDate

		FROM users u, product
		p, transaction t
	</sql>

	<sql id="getJoinWhere">
		WHERE t.buyer_id=u.user_id AND t.prod_no=p.prod_no
	</sql>

	<insert id="addPurchase" parameterType="com.model2.mvc.service.domain.Purchase">
		INSERT
		INTO
		transaction(tran_no, prod_no, buyer_id, payment_option,
		receiver_name,
		receiver_phone, demailaddr, dlvy_request,
		tran_status_code,
		order_data,
		dlvy_date )
		VALUES (
		seq_transaction_tran_no.nextval,
		#{purchaseProd.prodNo},
		#{buyer.userId},
		#{paymentOption},
		#{receiverName},
		#{receiverPhone},
		#{divyAddr},
		#{divyRequest},
		#{tranCode},
		SYSDATE,
		#{divyDate}
		)
	</insert>


	<select id="findPurchase" parameterType="int" resultMap="purchaseSelectMap">
		<include refid="getJoinQuery" />
		<include refid="getJoinWhere" />
		AND t.tran_no = #{value}
		ORDER BY p.prod_no
	</select>

	<select id="findPurchase2" parameterType="int" resultMap="purchaseSelectMap">
		<include refid="getJoinQuery" />
		<include refid="getJoinWhere" />
		AND t.prod_no = #{value}
		ORDER BY p.prod_no
	</select>

	<update id="updatePurchase" parameterType="com.model2.mvc.service.domain.Purchase">
		UPDATE transaction
		<set>
			<if test="paymentOption != null">payment_option=#{paymentOption},</if>
			<if test="receiverName != null">receiver_name=#{receiverName},</if>
			<if test="receiverPhone != null">receiver_phone=#{receiverPhone},</if>
			<if test="divyAddr != null">demailaddr=#{divyAddr},</if>
			<if test="divyRequest != null">dlvy_request=#{divyRequest},</if>
			<if test="divyDate != null">dlvy_date=#{divyDate}</if>
		</set>
		WHERE tran_no=#{tranNo}
	</update>

	<update id="updateTranCode" parameterType="com.model2.mvc.service.domain.Purchase">
		UPDATE transaction
		<set>
			<if test="tranCode != null">tran_status_code=#{tranCode}</if>
		</set>
		<if test="tranCode==2">WHERE prod_no=#{purchaseProd.prodNo}</if>
		<if test="tranCode==3">WHERE tran_no=#{tranNo}</if>
	</update>


	<sql id="getpurchase">
		<include refid="getJoinQuery" />
		<include refid="getJoinWhere" />

		<if test="#{buyerId}!=null">
			AND t.buyer_id = #{buyerId}
		</if>

		ORDER BY p.prod_no
	</sql>
	
	<select id="getTotalCount" parameterType="String"
		resultType="int">
		SELECT COUNT(*)
		FROM( SELECT *
		FROM transaction
			WHERE buyer_id = #{buyerId}
		) countTable
	</select>

	<select id="getPurchaseList" parameterType="java.util.Map" resultMap="purchaseSelectMap">
		SELECT
		inner.*
		FROM (
		SELECT
		inner_table.*, ROWNUM AS row_seq FROM
		(
		<include refid="getpurchase" />
		)
		inner_table WHERE
		ROWNUM &lt;= #{search.endRowNum} ) inner
		WHERE
		row_seq BETWEEN #{search.startRowNum} AND
		#{search.endRowNum}
	</select>

</mapper>